//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "AuthConnectionDelegate.h"
#import "CBPeripheralDelegate.h"
#import "LEScannerConnection.h"
#import "LEScannerConnectionInternal.h"

@class AuthConnectionManager, CBCharacteristic, CBPeripheral, CBService, ConnectionData, EventTimestamp, NSMutableArray, NSNumber, NSString, NSTimer;

@interface LeScannerConnection : NSObject <AuthConnectionDelegate, CBPeripheralDelegate, LEScannerConnection, LEScannerConnectionInternal>
{
    CBService *myService;
    CBCharacteristic *sendingCharacteristicPrimary;
    CBCharacteristic *sendingCharacteristicSecondary;
    CBCharacteristic *readingCharacteristic;
    CBCharacteristic *readingCharacteristicFast;
    unsigned long long lengthOfDataToSend;
    NSNumber *myRSSI;
    BOOL shouldWaitForCharacteristicStateUpdateToDisconnect;
    NSTimer *stateTimer;
    NSTimer *forceDisconnectTimer;
    NSTimer *safetyTerminateTimer;
    EventTimestamp *inDisconnectTimestamp;
    EventTimestamp *connectionTimestamp;
    EventTimestamp *forceTerminateTimestamp;
    EventTimestamp *servicesModifiedTimestamp;
    NSMutableArray *arrayOfBeaconCharacteristics;
    long long numberOfFalseConn;
    BOOL _requireHandshake;
    BOOL _ignoreForceRestartConnectionAfterLongSleep;
    int _scannerState;
    id <LEScannerConnectionDelegate> _delegate;
    EventTimestamp *_lastUpdateTimestamp;
    EventTimestamp *_lastDetectTimestamp;
    EventTimestamp *_startedConnectingTimestamp;
    id <LeScannerConnectionInternalDelegate> _delegateInternal;
    CBPeripheral *_servicePeripheral;
    ConnectionData *_connecionData;
    AuthConnectionManager *_connectionManager;
}

- (void).cxx_destruct;
- (BOOL)allServicesDiscoveredAndUserAuthenticated;
- (void)authenticationFailed;
- (void)canNotReceiveResponse;
- (void)cleanConnectionAfterDisconnect;
@property(retain, nonatomic) ConnectionData *connecionData; // @synthesize connecionData=_connecionData;
- (void)connect;
- (void)connectionEstablished;
- (void)connectionLost;
@property(retain, nonatomic) AuthConnectionManager *connectionManager; // @synthesize connectionManager=_connectionManager;
- (void)dealloc;
@property(nonatomic) __weak id <LEScannerConnectionDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <LeScannerConnectionInternalDelegate> delegateInternal; // @synthesize delegateInternal=_delegateInternal;
- (void)didAttemptConnection;
- (void)didAuthenticate;
- (void)didReceiveAuthRequest;
- (void)didReceiveDiconnectReqeust;
- (void)didReceiveMessage:(id)arg1;
- (void)disconnect:(BOOL)arg1;
- (void)disconnectBecauseOfError;
- (void)discoverAndConnectServices;
- (void)executeDiscoverServices;
- (void)executeSend:(id)arg1 onPrimaryChannel:(BOOL)arg2;
- (void)finalizeMessageAndSendCoreData:(id)arg1 onPrimaryChannel:(BOOL)arg2;
- (void)forceDisconnectTimerTriggered:(id)arg1;
- (void)forceTerminateConnection:(BOOL)arg1;
- (void)handleGeneralBleutoothError:(id)arg1;
@property(nonatomic) BOOL ignoreForceRestartConnectionAfterLongSleep; // @synthesize ignoreForceRestartConnectionAfterLongSleep=_ignoreForceRestartConnectionAfterLongSleep;
- (id)inDisconnectTimestampValue;
- (id)initWithPeripheral:(id)arg1 withDelegate:(id)arg2;
- (void)invalidateStuckInStateTimer;
- (BOOL)isConnected;
- (BOOL)isConnecting;
- (BOOL)isInDisconectingProcess;
- (BOOL)isInternallyConnected;
@property(retain, nonatomic) EventTimestamp *lastDetectTimestamp; // @synthesize lastDetectTimestamp=_lastDetectTimestamp;
- (id)lastRSSI;
@property(retain, nonatomic) EventTimestamp *lastUpdateTimestamp; // @synthesize lastUpdateTimestamp=_lastUpdateTimestamp;
- (void)notifyDelegateOfConnect;
- (void)notifyDelegateOfDisconnect;
- (void)notifyPeripheralForReadingCharacteristicFast:(id)arg1;
@property(readonly) CBPeripheral *peripheral;
- (void)peripheral:(id)arg1 didDiscoverCharacteristicsForService:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didDiscoverIncludedServicesForService:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didDiscoverServices:(id)arg2;
- (void)peripheral:(id)arg1 didModifyServices:(id)arg2;
- (void)peripheral:(id)arg1 didReadRSSI:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didUpdateNotificationStateForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didUpdateValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didUpdateValueForDescriptor:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didWriteValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didWriteValueForDescriptor:(id)arg2 error:(id)arg3;
- (void)peripheralDidUpdateRSSI:(id)arg1 error:(id)arg2;
- (id)peripheralIdentifier;
- (void)recovered;
@property(nonatomic) BOOL requireHandshake; // @synthesize requireHandshake=_requireHandshake;
- (void)resetCharacteristics;
- (void)resetDataToSend;
- (void)scanForAppropriateCharacteristicsWithPeripheral:(id)arg1;
@property(nonatomic) int scannerState; // @synthesize scannerState=_scannerState;
- (void)sendDataInChunks:(id)arg1 onPrimaryChannel:(BOOL)arg2;
- (void)sendString:(id)arg1 onPrimaryChannel:(BOOL)arg2;
- (id)serviceId;
@property(retain, nonatomic) CBPeripheral *servicePeripheral; // @synthesize servicePeripheral=_servicePeripheral;
- (id)servicesForCurrentAttempt;
- (void)setInternalDelegate:(id)arg1;
- (void)setKeepAliveInterval:(long long)arg1;
- (void)setRSSI:(id)arg1;
@property(retain, nonatomic) EventTimestamp *startedConnectingTimestamp; // @synthesize startedConnectingTimestamp=_startedConnectingTimestamp;
- (BOOL)shouldAcceptServiceWithCBUUID:(id)arg1;
- (BOOL)shouldDiscoverAndConnectServicesAfterConnecting;
- (BOOL)shouldTerminateConnectionImmediatellyOnDisconnect;
- (BOOL)shouldTryToDiscoverAllServicesIfNoServicesAreFound;
- (void)startForceDisconnectTimer;
- (void)startSafetyTerminateTimer;
- (void)startStateTimer:(double)arg1;
- (void)startStuckInStateTimer;
- (void)startStuckInStateTimerLongest;
- (void)startStuckInStateTimerShort;
- (void)stateTimerTriggered:(id)arg1;
- (void)stopForceDisconnectTimer;
- (void)stopSafetyTerminateTimer;
- (void)terminateConnection:(BOOL)arg1;
- (id)unId;
- (void)updateConnectionWithPeripheral:(id)arg1;
- (void)updateRSSI;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

